% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_ppwl2svm.R
\name{ppwl2svm}
\alias{ppwl2svm}
\title{Penalized Principal Weighted L2-Hinge SVM (P\eqn{^2}WL2M) for Sparse Sufficient Dimension Reduction}
\usage{
ppwl2svm(
  x,
  y,
  H = 10,
  C = 1,
  lambda,
  gamma = 3.7,
  penalty = "grSCAD",
  max.iter = 100
)
}
\arguments{
\item{x}{Numeric predictor matrix (n x p), where n is the sample size and p is the number of predictors.}

\item{y}{Binary response vector of length n, coded as \code{-1, 1}.}

\item{H}{Number of quantile slices for principal machine construction (default: 10).}

\item{C}{Regularization parameter (default: 1).}

\item{lambda}{Penalty parameter for sparsity.}

\item{gamma}{Regularization parameter for SCAD/MCP penalty (default: 3.7).}

\item{penalty}{Penalty type: \code{"grSCAD"} (default), \code{"grLasso"}, or \code{"grMCP"}.}

\item{max.iter}{Maximum number of iterations (default: 100).}
}
\value{
A list with components:
\item{evalues}{Eigenvalues of the estimated subspace matrix.}
\item{evectors}{Eigenvectors spanning the sufficient dimension reduction subspace.}
\item{x}{The original predictor matrix.}
}
\description{
This function implements the penalized principal weighted L2-hinge support vector machine (P\eqn{^2}WL2M) method for sparse sufficient dimension reduction (SDR), typically for binary responses. Group penalties (SCAD, Lasso, MCP) are supported for variable selection.
}
\details{
This function solves a group-penalized principal machine with weighted L2 hinge loss, suitable for classification tasks. Efficient group coordinate descent (GCD) is used for parameter estimation. Use only with binary responses (\code{-1, 1}).
}
\examples{
\dontrun{
  set.seed(1)
  n <- 1000; p <- 10
  x <- MASS::mvrnorm(n, rep(0, p), diag(1, p))
  y <- (x \%*\% B[,1] / (0.5 + (x \%*\% B[,2] + 1)^2)) + 0.2 * rnorm(n)
  y.binary <- sign(y)
  fit <- ppwl2svm(x, y.binary, H = 10, C = 5, lambda = 0.08, gamma = 3.7,
            penalty = "grSCAD", max.iter = 100)
  fit$evectors[, 1:2]
}

}
